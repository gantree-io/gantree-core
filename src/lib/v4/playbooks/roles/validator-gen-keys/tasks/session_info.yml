---
- name: save session info
  shell: |
    set -o pipefail
    crypto="{{ item }}"

    inspect_result=$(cat /home/{{ substrate_user }}/mnemonic | xargs --null /usr/local/bin/subkey --${crypto} inspect)

    public_key=$(echo -n "${inspect_result}" | grep "Public key" | cut -d':' -f2 | tr -d '[:space:]')
    address=$(echo -n "${inspect_result}" | grep "Address" | cut -d':' -f2 | tr -d '[:space:]')

    printf '%b\n' "{{ item }}:\n  address: '${address}'\n  public_key: '${public_key}'"
  args:
    executable: /bin/bash
  register: session
  loop:
    - ed25519
    - sr25519
  changed_when: False

- name: get node key
  shell: |
    {{ sode.binary_name }} --node-key-file {{ sode.node_key_file }} > nodeoutput 2>&1 &

    sleep 5

    pkill {{ sode.binary_name }}

    node_id=$(grep "Local node identity is:" < nodeoutput | sed 's/.*://' | tr -d " ")

    echo ${node_id}
  register: node_key

- name: debug node_key
  debug:
    msg: "{{ node_key }}"

- name: get bootnode public ip
  ipify_facts:
  when: (not is_docker is defined) or (not is_docker == true)
  register: bootnode_ip
  retries: 5
  delay: 5
  until: bootnode_ip is success

- name: write session info to disk on remote host
  become: yes
  template:
    src: session.yaml.j2
    dest: /home/{{ substrate_user }}/session.{{ substrate_network_id }}.yaml
    mode: 0666

- name: get session variable
  set_fact:
    templated_session_yaml_fact: "{{ lookup('template', 'session.yaml.j2') }}"

- name: write session custom fact on node
  become: yes
  copy:
    content: "{{ templated_session_yaml_fact | from_yaml | to_nice_json }}"
    dest: /etc/ansible/facts.d/session.fact
    mode: 0664

- name: ensure host session directory
  delegate_to: localhost
  file:
    path: '{{ gantree_control_working }}/session'
    state: directory
  become: no

- name: change owner of substrate user keystore
  become: yes
  file:
    path: /home/{{ substrate_user }}/.local
    owner: '{{ substrate_user }}'
    group: '{{ substrate_group }}'
    recurse: yes
    mode: 0755
